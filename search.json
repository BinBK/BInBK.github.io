[{"title":"让div水平垂直居中","url":"/2022/01/26/让div水平垂直居中11/"},{"title":"Git","url":"/2022/01/25/Git/","content":"## 一、Git文件的三种状态和工作模式\n\n### 1.状态\n\n使用Git操作文件时，文件的三种状态\n\n|       状态        |                             描述                             |\n| :---------------: | :----------------------------------------------------------: |\n| 已提交(committed) |             表示数据已经安全的保存在本地数据库中             |\n| 已修改(modified)  |            表示修改了文件，但还没有保存到数据库中            |\n|  已暂存(staged)   | 表示对一个已修改文件的当前版本做了标记，使之包含在下次提交的快照中 |\n<!--more-->\n### 2.工作模式\n\nGit项目的三个工作区域\n\n|  分类   |                             描述                             |\n| :-----: | :----------------------------------------------------------: |\n| 工作区  |                      自己本地创建的项目                      |\n| 暂存区  | Git版本库里存着很多东西，其中最重要的是称为stage(或者叫index)的暂存区，还有Git自动创建的第一个分支master，以及指向master的一个指针叫HEAD |\n| Git仓库 |  工作区有一个隐藏目录.git,这个不算是工作区，而是Git的版本库  |\n\n基本的Git工作流程如下：\n\n- 在工作区中修改文件\n- 对修改的文件进行快照，然后添加到暂存区\n- 提交更新，将保存在暂存区域的文件快照永久转储到Git仓库中 \n\n## 二、创建版本库并提交文件\n\n```c\ngit init 初始化本地仓库\ngit status 查看状态\ngit add . 添加文件,<path>是文件也可以是目录\ngit commit -m '注释' 提交添加的文件并备注说明\ngit remote add origin xxx  xxx是远程仓库地址，连接远程仓库\ngit push -u origin master 将本地仓库文件推送到远程仓库\n```\n\n## 三、文件操作\n\n### 1、查看\n\n```c\ngit log 查看变更日志\ngit branch 查看分支\ngit reflog 查看之前的修改操作\ngit ls-files 查看暂存区文件 \ngit log -5 --pretty=oneline 查看最近五次修改操作\n```\n\n### 2、删除\n\n```c\ngit rm 文件名.后缀 工作区和本地仓库的文件都删除\ngit remote rm origin 删除远程仓库\n```\n\n### 3、文件恢复\n\n如果已经把文件提交到本地仓库，却不小心误删了\n\n```c\ngit checkout -- 文件名.后缀 如果已经把文件提交到本地仓库，不小心误删了，可以从本地仓库把文件恢复到工作区\n```\n\n## 四、版本回退\n\n```c\ngit reset --hard HEAD^    //回退多少个版本就多少个^,或者~1,回退多少个版本数字就写多少个，或者 -hard 版本号    \n```\n\n","tags":["Github","Git"],"categories":["Github","Git"]},{"title":"使用jsDeliver+Github建图床","url":"/2022/01/24/使用jsDeliver-Github建图床/","content":"## 一、介绍\n\n### 1.什么是jsDlive\n\n> jsDelivr 是一个免费开源的 CDN 解决方案，用于帮助开发者和站长。包含 JavaScript 库、jQuery 插件、CSS 框架、字体等等 Web 上常用的静态资源。\n\n### 2.为什么使用图床\n\n> 图床一般是指储存图片的服务器，有国内和国外之分。国外的图床由于有空间距离等因素决定访问速度很慢影响图片显示速度。国内也分为单线空间、多线空间和cdn加速三种。\n>\n> Github使用的是cdn加速\n\n我们写博客或网站时，会使用到图片，把图片放到本地的话，可能会出现问题，还会影响网页加载速度，使用图床能很好解决这些问题。\n<!--more-->\n\n## 二、使用Github创建仓库\n\n### 1.创建Github仓库\n\n找到Repositories,点击new，写入仓库名，注意仓库要公开的，选择Public，然后创建\n\n### 2.将图片推送到仓库\n\n在本地文件夹使用Git Bash，与创建的Github仓库连接，放入图片\n\n```c\ngit add * //*代表当前目录所有文件\ngit commit -m \"写要提交的信息\"\ngit push //推送到远程仓库\n```\n\n## 三、使用jsDelive加载图片\n\n根据格式写出来的链接相对于一个外链，直接使用即可\n\n```c\nhttps://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径\n\n//例\nhttps://cdn.jsdelivr.net/gh/FiveMoonL/mycdn/images/background2.png\n```\n\n\n","tags":["Github","jsDlive"],"categories":["Github","jsDlive"]},{"title":"123","url":"/2022/01/23/123/"},{"title":"使用网易云api","url":"/2021/10/28/使用网易云api/","content":"\n## 网址\n\n[网易云音乐 API](https://binaryify.github.io/NeteaseCloudMusicApi/#/)\n\n### 安装使用\n\n上面网址有说明\n先安装 他的东西，再加入他的文件夹 npm install\n再运行即可\n\n[参考](https://blog.csdn.net/lin13958756858/article/details/90906286)\n"},{"title":"axios使用","url":"/2021/10/19/axios使用/","content":"\n## axios\n\n### 直接使用\n\n一、\n安装 axios\nnpm install --save axios\n二、\n导入 axios\nimport axios from 'axios'\n三、使用\n<!--more-->\n\n\n```js\nmounted(){\nthis.$axios.get(\"网址\")\n.then(res => {\nconsole.log(res.data);\n})\n.catch(error =>{\nconsole.log(error);\n})\n}\n```\n\n### 跨域\n\n一、\n安装\n二、使用到的文件\nmain.js\nvue.config.js\napp.vue\n三、\n\n##### main.js\n```js\nimport axios from 'axios'\n\nVue.prototype.$axios = axios;\n```\n\n\n\n#### vue.config.js\n```js\nmodule.exports = {\ndevServer: {\nproxy: {\n'/te': {\n// 此处的写法，目的是为了 将 /api 替换成 https://www.baidu.com/\ntarget: 'http://apis.juhe.cn',\n// 允许跨域\nchangeOrigin: true,\nws: true,\npathRewrite: {\n'^/te': ''\n}\n}\n}\n}\n}\n\n```\n\n#### app.vue\n\n和上面一样，改前面的地址\n\n[跨域参考一](https://www.cnblogs.com/l-y-h/p/11815452.html)\n[中文文档](https://www.kancloud.cn/yunye/axios/234845)\n\n[可以直接连接的网络接口](http://www.iwenwiki.com/)\n\nq:\n拦截器，开发环境和生产环境怎么区分\n","tags":["axios"],"categories":["axios"]},{"title":"查看端口某个端口是否被占用","url":"/2021/10/15/查看端口某个端口是否被占用/","content":"\n> 启动应用时不能运行，有可能时要使用的端口被别的程序占用，但又不知道被谁占用，那我们就需要找出是什么程序并关闭\n<!-- more -->\n## 一、查找占用端口的PID\n\n打开cmd命令行窗口，输入命令：**netstat -ano**,就可以列出使用使用中的端口，可以看到以下显示，在本地地址中最后一串数字就是我们想要的端口，在这里查看是否被占用\n\n![image-端口展示](https://cdn.jsdelivr.net/gh/BinBK/myCdn/images/PID211015a.png)\n\n查看被占用端口对应的PID，输入命令：netstat -aon|findstr “数值”，输入端口可查到相关使用信息，输入PID可看到相关端口\n\n## 二、根据PID找到相关程序\n\n继续输入**tasklist|findstr** \"PID数值\"，查看是哪个进程或者程序占用了端口\n\n## 三、关闭相关程序\n\n打开任务管理器，找到相关程序并关闭\n![image-任务管理器](https://cdn.jsdelivr.net/gh/BinBK/myCdn/images/PID211015b.png)","tags":["计算机"],"categories":["计算机"]},{"title":"hexo加入图片","url":"/2021/10/14/hexo简单介绍/","content":"\n## 加入图片\n\n### 下载插件\n\n一、\nnpm install https://github.com/7ym0n/hexo-asset-image --save\n这是修改过的插件，因为版本问题用这个比较好\n二、\n配置\\_config.yml 里面的 post_asset_folder:false 这个选项设置为 true。\n<!--more-->\n三、\n\n使用\n![xxx](xxx/xxx.png)\n问题一：怎么解决让格式代码正常显示\n\n[具体网站](https://www.jianshu.com/p/3db6a61d3782)\n\n## 可参考博客\n\n[博客一](https://notes.iissnan.com/2015/something-about-next/)\n[博客二](http://51world.win/) 这个有点旧了，注意看时间\n\n## hexo 书写相关文章\n\n[网站一](https://www.jianshu.com/p/56d99a3049a5)\n","tags":["hexo"],"categories":["hexo"]},{"title":"让div水平垂直居中","url":"/2021/10/14/让div水平垂直居中/","content":"使用css让div盒子实现水平垂直居中的几种方法\n\n## 一、flex\n\n使用flex布局，在父元素上写，子元素将水平垂直居中\n\n```html\n#container{\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n}\n```\n<!--more-->\n\n\n## 二、使用定位\n\n准备\n\n```html\n<style type=\"text/css\">\n\nhtml,body{\n\theight:100%;  /*注意html不设置高度 body也就没有继承高度，就会随内容支撑高度*/\n\toverflow: hidden;  \n\tmargin:0;\n\tpadding: 0;\n}\n</style>\n\n```\n\n### 1.已知道宽高，绝对定位,margin减去div一半宽高\n\n```html\n#box{\n\tbackground: red;\n\twidth: 200px;\n\theight: 200px;\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\tmargin-left: -100px;\n\tmargin-top: -100px;\n}\n```\n\n### 2.div宽高未知，使用translate平移一半宽高\n\n```html\n#box {\n\tbackground: red;\n\twidth: 200px;\n\theight: 200px;\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%,-50%);\n}\n```\n\n### 3.定位好，margin:auto\n\n```html\n#box {\n\tbackground: red;\n\twidth: 200px;\n\theight: 200px;\n\tposition: absolute;\n\tleft: 0;\n\tright: 0;\n\ttop: 0;\n\tbottom: 0;\n\tmargin: auto;\n}\n```\n\n","tags":["css"],"categories":["css"]},{"title":"myblog","url":"/2021/10/14/myblog/","content":"测试\n![图片](yidian_116011362.jpg)\n<!--more-->\n{% asset_img yidian_116011362.jpg This is an test image %}\n\n![图片](myblog/yidian_116011362.jpg)\n\n{% asset_img myblog/yidian_116011362.jpg This is an test image %}\n\n![图片](a.jpg)\n\n![图片](myblog/a.jpg)\n"},{"title":"Github的使用","url":"/2021/10/13/Github的使用/","content":"\n## 一、使用Github搜索项目\n\n> 最简单的是直接使用搜索框搜索项目，但这样搜索出来的项目多且乱，不知道使用那一个比较好，使用Github高级搜索语法能更快让我们找到想要的项目\n<!-- more -->\n### Github高级搜索语法\n\n#### 1.stars\n\n想要找到高质量的项目，可通过筛选star数找到多人收藏的。stars:>3000，直接在搜索的项目后面加空格写入即可找到star三千以上的项目。\n\n#### 2.pushed\n\n如果想找最近有更新的项目，可使用这个。pushed：>2022-1-1,即可找到2022年一月一号也后更新的项目\n\n#### 3.desciption\n\n搜索项目的简介。in:description 博客，即可找到简介有博客这个词的项目\n\n#### 4.language\n\n搜索项目的语言\n\n## 二、本地文件上传到Github仓库\n\n> 需要先配置SSH key。cd ~/. ssh #检查本机已存在的ssh密钥，如果提示：No such file or directory 说明你是第一次使用git，则需要配置。已经安装了node.js、npm、git\n\n在Repositories中新建一个仓库，在本地新建文件夹，点击进入后，打开Git Bash或cmd命名窗口\n\n初始化本地仓库\n\n```c\ngit init\n```\n\n将文件提交到暂存区, . 是选择所有文件\n\n```c\ngit add .\ngit commit -m \"写提交文件的说明\"\ngit branch -M main 第一次创建需要写\ngit remoted aa origin xxxx 写仓库的地址，第一次提交需要写\ngit push -u origin main\t提交到远程仓库    \n```\n\n## 三、将Github项目下载到本地\n\n有两个办法，一、直接下载压缩包，二、git clone 地址，下载到本地\n","tags":["Github"],"categories":["Github"]},{"title":"Hello World","url":"/2021/10/12/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n"}]